;/*FB_PKG_DELIM*/

__d("MAWChatJid",["FBLogger","I64","Promise","ReQL","WAJids"],(function(a,b,c,d,e,f,g){"use strict";var h,i;function j(a){a=d("WAJids").threadIdForChatJid(a);return(i||(i=d("I64"))).of_string(a)}function k(a,e){try{return d("ReQL").firstAsync(d("ReQL").fromTableAscending(a.mi_act_mapping_table.index("jid")).getKeyRange(j(e))).then(function(a){return a==null?void 0:a.serverThreadKey})}catch(a){c("FBLogger")("messenger_e2ee_web").catching(a).warn("Invalid chatJid: "+e);return(h||(h=b("Promise"))).reject(a)}}function a(a,b){return k(a,b).then(function(a){if(a!=null)return a;throw c("FBLogger")("messenger_e2ee_web").mustfixThrow("Tried to convert a jid to thread key but couldn't find a correspondingrow in the mapping table. This can mean that there is a race condition between the time a thread was created on the WA backend, and the time it was inserted into the mapping table. i.e. this function is called before the fn that inserts the mapping into the mapping table")})}function e(a,e){try{return d("ReQL").firstAsync(d("ReQL").fromTableAscending(a.mi_act_mapping_table.index("jid")).getKeyRange(e)).then(function(a){return a==null?void 0:a.serverThreadKey})}catch(a){c("FBLogger")("messenger_e2ee_web").catching(a).warn("Invalid integer jid: "+(i||(i=d("I64"))).to_string(e));return(h||(h=b("Promise"))).reject(a)}}g.toIntegerJid=j;g.toThreadKeyMaybe=k;g.toThreadKey=a;g.toThreadKeyMaybeForChatJidInteger=e}),98);